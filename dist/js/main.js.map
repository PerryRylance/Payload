{"version":3,"sources":["core.js","events/event-dispatcher.js","game.js","interaction.js","main.js","player.js","units.js","world.js","assets/assets.js","assets/asset.js","assets/collection.js","entities/entity.js","entities/planet.js","entities/ship.js","events/event.js","ui/weapon-select.js","weapons/weapon.js","weapons/bomb.js","weapons/large-bomb.js","weapons/medium-bomb.js","weapons/mega-bomb.js","weapons/projectile.js","weapons/small-bomb.js"],"names":[],"mappingsnNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrhlbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["window.Payload = function()\r\n{\r\n\twindow.stats = new Stats();\r\n\tstats.showPanel(0);\r\n\tstats.domElement.style.zIndex = 999;\r\n\tstats.domElement.style.position = \"fixed\";\r\n\tdocument.body.appendChild(stats.domElement);\r\n\t\r\n\twindow.Box2D = Box2D({\r\n\t\tTOTAL_MEMORY: Payload.BOX2D_MEMORY_MB * 1048576\r\n\t});\r\n}\r\n\r\nPayload.BOX2D_MEMORY_MB\t\t= 256;\r\n\r\nPayload.extend = function(child, parent)\r\n{\r\n\tchild.prototype = Object.create(parent.prototype);\r\n\tchild.prototype.constructor = child;\r\n}\r\n\r\nPayload.assert = function(condition, failure)\r\n{\r\n\tif(condition === true)\r\n\t\treturn;\r\n\t\r\n\tif(condition === false)\r\n\t{\r\n\t\tif(!failure)\r\n\t\t\tthrow new Error(\"Assertion failed\");\r\n\t\t\r\n\t\tthrow new Error(failure);\r\n\t}\r\n\t\r\n\tthrow new Error(\"Invalid assertion\");\r\n}\r\n\r\nPayload.prototype.init = function()\r\n{\r\n\tvar self = this;\r\n\t\r\n\t$(\"dialog.loading\").attr(\"open\", \"open\");\r\n\t\r\n\tthis.assets = new Payload.Assets();\r\n\tthis.assets.on(\"load\", function(event) {\r\n\t\t\r\n\t\t$(\"dialog.loading\").removeAttr(\"open\");\r\n\t\t\r\n\t\t// Temp code, just start up a game here\r\n\t\tself.player = new Payload.Player({\r\n\t\t\t\"name\": \"Pez\"\r\n\t\t});\r\n\t\t\r\n\t\tself.game = new Payload.Game();\r\n\t\tself.game.addPlayer(self.player);\r\n\t\tself.game.start();\r\n\t\t\r\n\t});\r\n\tthis.assets.load();\r\n}\r\n","// requires: core.js\r\n\r\n/**\r\n * Base class for any (non HTMLElement) object which dispatches or listens for events\r\n * @module Payload.EventDispatcher\r\n * @memberof Payload\r\n */\r\nPayload.EventDispatcher = function()\r\n{\r\n\tPayload.assert(this instanceof Payload.EventDispatcher, \"Inheritence assertion failed, did you forget to call extend?\");\r\n\t\r\n\tthis._listenersByType = {};\r\n}\r\n\r\n/**\r\n * Adds an event listener on this object\r\n * @method\r\n * @memberof Payload.EventDispatcher\r\n * @param {string} type The event type, or multiple types separated by spaces\r\n * @param {function} callback The callback to call when the event fires\r\n * @param {object} [thisObject] The object to use as \"this\" when firing the callback\r\n * @param {bool} [useCapture] If true, fires the callback on the capture phase, as opposed to bubble phase\r\n */\r\nPayload.EventDispatcher.prototype.addEventListener = function(type, listener, thisObject, useCapture)\r\n{\r\n\tvar types = type.split(/\\s+/);\r\n\tif(types.length > 1)\r\n\t{\r\n\t\tfor(var i = 0; i < types.length; i++)\r\n\t\t\tthis.addEventListener(types[i], listener, thisObject, useCapture);\r\n\t\t\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tif(!(listener instanceof Function))\r\n\t\tthrow new Error(\"Listener must be a function\");\r\n\r\n\tvar target;\r\n\tif(!this._listenersByType.hasOwnProperty(type))\r\n\t\ttarget = this._listenersByType[type] = [];\r\n\telse\r\n\t\ttarget = this._listenersByType[type];\r\n\t\r\n\tvar obj = {\r\n\t\tlistener: listener,\r\n\t\tthisObject: (thisObject ? thisObject : this),\r\n\t\tuseCapture: (useCapture ? true : false)\r\n\t\t};\r\n\t\t\r\n\ttarget.push(obj);\r\n}\r\n\r\n/**\r\n * Alias for addEventListener\r\n * @method\r\n * @memberof Payload.EventDispatcher\r\n * @see Payload.EventDispatcher#addEventListener\r\n */\r\nPayload.EventDispatcher.prototype.on = Payload.EventDispatcher.prototype.addEventListener;\r\n\r\n/**\r\n * Removes event listeners from this object\r\n * @method\r\n * @memberof Payload.EventDispatcher\r\n * @param {string} type The event type to remove listeners from\r\n * @param {function} [listener] The function to remove. If omitted, all listeners will be removed\r\n * @param {object} [thisObject] Use the parameter to remove listeners bound with the same thisObject\r\n * @param {bool} [useCapture] Remove the capture phase event listener. Otherwise, the bubble phase event listener will be removed.\r\n */\r\nPayload.EventDispatcher.prototype.removeEventListener = function(type, listener, thisObject, useCapture)\r\n{\r\n\tvar arr, index, obj;\r\n\r\n\tif(!(arr = this._listenersByType[type]))\r\n\t\treturn;\r\n\t\t\r\n\tif(!thisObject)\r\n\t\tthisObject = this;\r\n\t\t\r\n\tuseCapture = (useCapture ? true : false);\r\n\t\r\n\tfor(var i = 0; i < arr.length; i++)\r\n\t{\r\n\t\tobj = arr[i];\r\n\t\r\n\t\tif((arguments.length == 1 || obj.listener == listener) && obj.thisObject == thisObject && obj.useCapture == useCapture)\r\n\t\t{\r\n\t\t\tarr.splice(i, 1);\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Alias for removeEventListener\r\n * @method\r\n * @memberof Payload.EventDispatcher\r\n * @see Payload.EventDispatcher#removeEventListener\r\n */\r\nPayload.EventDispatcher.prototype.off = Payload.EventDispatcher.prototype.removeEventListener;\r\n\r\n/**\r\n * Test for listeners of type on this object\r\n * @method\r\n * @memberof Payload.EventDispatcher\r\n * @param {string} type The event type to test for\r\n * @return {bool} True if this object has listeners bound for the specified type\r\n */\r\nPayload.EventDispatcher.prototype.hasEventListener = function(type)\r\n{\r\n\treturn (_listenersByType[type] ? true : false);\r\n}\r\n\r\n/**\r\n * Fires an event on this object\r\n * @method\r\n * @memberof Payload.EventDispatcher\r\n * @param {string|Payload.Event} event Either the event type as a string, or an instance of Payload.Event\r\n */\r\nPayload.EventDispatcher.prototype.dispatchEvent = function(event)\r\n{\r\n\tif(!(event instanceof Payload.Event))\r\n\t{\r\n\t\tif(typeof event == \"string\")\r\n\t\t\tevent = new Payload.Event(event);\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar src = event;\r\n\t\t\tevent = new Payload.Event();\r\n\t\t\tfor(var name in src)\r\n\t\t\t\tevent[name] = src[name];\r\n\t\t}\r\n\t}\r\n\r\n\tevent.target = this;\r\n\t\t\r\n\tvar path = [];\r\n\tfor(var obj = this.parent; obj != null; obj = obj.parent)\r\n\t\tpath.unshift(obj);\r\n\t\r\n\tevent.phase = Payload.Event.CAPTURING_PHASE;\r\n\tfor(var i = 0; i < path.length && !event._cancelled; i++)\r\n\t\tpath[i]._triggerListeners(event);\r\n\t\t\r\n\tif(event._cancelled)\r\n\t\treturn;\r\n\t\t\r\n\tevent.phase = Payload.Event.AT_TARGET;\r\n\tthis._triggerListeners(event);\r\n\t\t\r\n\tevent.phase = Payload.Event.BUBBLING_PHASE;\r\n\tfor(i = path.length - 1; i >= 0 && !event._cancelled; i--)\r\n\t\tpath[i]._triggerListeners(event);\r\n\t\r\n\t// Native DOM event\r\n\tvar topMostElement = this.element;\r\n\tfor(var obj = this.parent; obj != null; obj = obj.parent)\r\n\t{\r\n\t\tif(obj.element)\r\n\t\t\ttopMostElement = obj.element;\r\n\t}\r\n\t\r\n\tif(topMostElement)\r\n\t{\r\n\t\tvar customEvent = {};\r\n\t\t\r\n\t\tfor(var key in event)\r\n\t\t{\r\n\t\t\tvar value = event[key];\r\n\t\t\t\r\n\t\t\tif(key == \"type\")\r\n\t\t\t\tvalue += \".Payload\";\r\n\t\t\t\r\n\t\t\tcustomEvent[key] = value;\r\n\t\t}\r\n\t\t\r\n\t\t$(topMostElement).trigger(customEvent);\r\n\t}\r\n}\r\n\r\n/**\r\n * Alias for removeEventListener\r\n * @method\r\n * @memberof Payload.EventDispatcher\r\n * @see Payload.EventDispatcher#removeEventListener\r\n */\r\nPayload.EventDispatcher.prototype.trigger = Payload.EventDispatcher.prototype.dispatchEvent;\r\n\r\n/**\r\n * Handles the logic of triggering listeners\r\n * @method\r\n * @memberof Payload.EventDispatcher\r\n * @inner\r\n */\r\nPayload.EventDispatcher.prototype._triggerListeners = function(event)\r\n{\r\n\tvar arr, obj;\r\n\t\r\n\tif(!(arr = this._listenersByType[event.type]))\r\n\t\treturn;\r\n\t\t\r\n\tfor(var i = 0; i < arr.length; i++)\r\n\t{\r\n\t\tobj = arr[i];\r\n\t\t\r\n\t\tif(event.phase == Payload.Event.CAPTURING_PHASE && !obj.useCapture)\r\n\t\t\tcontinue;\r\n\t\t\t\r\n\t\tobj.listener.call(arr[i].thisObject, event);\r\n\t}\r\n}\r\n","// requires: events/event-dispatcher.js\r\n\r\n/**\r\n * @module Payload.Game\r\n * Handles rules, turns, etc.\r\n */\r\n\r\nPayload.Game = function()\r\n{\r\n\tvar self\t\t\t= this;\r\n\t\t\r\n\tPayload.EventDispatcher.call(this);\r\n\t\r\n\tthis.players\t\t= [];\r\n\tthis.currentPlayer\t= null;\r\n\tthis.status\t\t\t= Payload.Game.STATUS_LOBBY;\r\n\t\r\n\tthis.weaponSelect = new Payload.WeaponSelect( $(\"select.weapon\") );\r\n\t\r\n\t$(\"menu#actions button\").on(\"click\",  function(event) {\r\n\t\tself.onActionButtonClicked(event);\r\n\t});\r\n}\r\n\r\nPayload.extend(Payload.Game, Payload.EventDispatcher);\r\n\r\nPayload.Game.STATUS_LOBBY\t\t= \"lobby\";\r\nPayload.Game.STATUS_PLAYING\t\t= \"playing\";\r\nPayload.Game.STATUS_ENDED\t\t= \"ended\";\r\n\r\nPayload.Game.prototype.onActionButtonClicked = function(event)\r\n{\r\n\tvar action = event.target.id;\r\n\t\r\n\tswitch(action)\r\n\t{\r\n\t\tcase \"fire\":\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\tcase \"launch\":\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\tcase \"re-center\":\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\tcase \"skip-turn\":\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\tcase \"surrender\":\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tdefault:\r\n\t\t\tthrow new Error(\"Unknown action\");\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nPayload.Game.prototype.addPlayer = function(player)\r\n{\r\n\tthis.players.push(player);\r\n\tplayer.game = this;\r\n}\r\n\r\nPayload.Game.prototype.start = function()\r\n{\r\n\tPayload.assert(this.players.length ? true : false);\r\n\t\r\n\tthis.world = new Payload.World(this);\r\n\t\r\n\tvar index = Math.floor(Math.random() * this.players.length);\r\n\tthis.startTurn(this.players[index]);\r\n}\r\n\r\nPayload.Game.prototype.startTurn = function(player)\r\n{\r\n\tPayload.assert(player instanceof Payload.Player);\r\n\t\r\n\tthis.currentPlayer = player;\r\n}\r\n\r\nPayload.Game.prototype.endTurn = function()\r\n{\r\n\tPayload.assert(this.currentPlayer != null);\r\n\t\r\n\tvar currentPlayerIndex = this.players.indexOf(this.currentPlayer);\r\n\t\r\n\tPayload.assert(currentPlayerIndex > -1);\r\n\t\r\n\tvar nextIndex = (currentPlayerIndex++ % this.players.length);\r\n\t\r\n\tthis.startTurn(this.players[nextIndex]);\r\n}\r\n\r\nPayload.Game.prototype.end = function()\r\n{\r\n\t\r\n}","// requires: core.js\r\n\r\nPayload.Interaction = function(camera, element)\r\n{\r\n\tvar self = this;\r\n\t\r\n\tthis.camera\t\t= camera;\r\n\tthis.element\t= element;\r\n\t\r\n\tthis.isDragging = false;\r\n\t\r\n\telement.addEventListener(\"mousedown\", function(event) {\r\n\t\tself.onMouseDown(event);\r\n\t});\r\n\t\r\n\telement.addEventListener(\"mouseup\", function(event) {\r\n\t\tself.onMouseUp(event);\r\n\t});\r\n\t\r\n\telement.addEventListener(\"mousemove\", function(event) {\r\n\t\tself.onMouseMove(event);\r\n\t});\r\n\t\r\n\telement.addEventListener(\"mousewheel\", function(event) {\r\n\t\tself.onMouseWheel(event);\r\n\t});\r\n}\r\n\r\nPayload.Interaction.prototype.onMouseDown = function(event)\r\n{\r\n\tthis.isDragging = true;\r\n}\r\n\r\nPayload.Interaction.prototype.onMouseUp = function(event)\r\n{\r\n\tthis.isDragging = false;\r\n}\r\n\r\nPayload.Interaction.prototype.onMouseMove = function(event)\r\n{\r\n\tif(!this.isDragging)\r\n\t\treturn;\r\n\t\r\n\tthis.camera.position.x -= event.movementX / this.camera.zoom;\r\n\tthis.camera.position.y -= event.movementY / this.camera.zoom;\r\n}\r\n\r\nPayload.Interaction.prototype.onMouseWheel = function(event)\r\n{\t\r\n\tvar amount\t\t= event.deltaY < 0 ? 1 : -1;\r\n\tvar factor\t\t= this.camera.zoom * 0.1;\r\n\t\r\n\t// TODO: Center on mouse point, apply zoom, recenter on old camera center\r\n\t\r\n\tthis.camera.zoom += amount * factor;\r\n\tthis.camera.updateProjectionMatrix();\r\n}","window.addEventListener(\"load\", function(event) {\r\n\r\n\twindow.payload = new Payload();\r\n\tpayload.init();\r\n\t\r\n});","// requires: events/event-dispatcher.js\r\n\r\nPayload.Player = function(options)\r\n{\r\n\tPayload.EventDispatcher.call(this);\r\n\t\r\n\tif(!options)\r\n\t\toptions = {};\r\n\t\r\n\tfor(var name in options)\r\n\t\tthis[name] = options;\r\n}\r\n\r\nPayload.extend(Payload.Player, Payload.EventDispatcher);\r\n","// require: core.js\r\n\r\nPayload.Units = {\r\n\t\r\n\tRATIO: 20,\r\n\t\r\n\tphysicsToGraphics: function(x) {\r\n\t\treturn x * Payload.Units.PHYSICS_TO_GRAPHICS;\r\n\t},\r\n\t\r\n\tgraphicsToPhysics: function(x) {\r\n\t\treturn x * Payload.Units.GRAPHICS_TO_PHYSICS;\r\n\t}\r\n\t\r\n};\r\n\r\nPayload.Units.GRAPHICS_TO_PHYSICS\t\t= 1 / Payload.Units.RATIO;\r\nPayload.Units.PHYSICS_TO_GRAPHICS\t\t= Payload.Units.RATIO;\r\n\r\nPayload.Units.p2g = Payload.Units.physicsToGraphics;\r\nPayload.Units.g2p = Payload.Units.graphicsToPhysics;\r\n","/* requires: \r\ncore.js\r\nevents/event-dispatcher.js\r\n*/\r\n\r\n/**\r\n * @module Payload.World\r\n * Handles physics, graphics, entities, updates etc.\r\n */\r\n\r\nPayload.World = function(game, options)\r\n{\r\n\tPayload.EventDispatcher.apply(this, arguments);\r\n\t\r\n\tif(!options)\r\n\t\toptions = {};\r\n\t\r\n\tthis.options = options = $.extend(true, {}, Payload.World.defaults, options);\r\n\t\r\n\tthis.game\t\t= game;\r\n\tthis.entities\t= [];\r\n\tthis.planets\t= [];\r\n\tthis.ships\t\t= [];\r\n\t\r\n\tthis.initPhysics();\r\n\tthis.initGraphics();\r\n\t\r\n\tthis.initPlanets(options);\r\n\tthis.initShips(options);\r\n\t\r\n\t// this.enableDebugDraw();\r\n\t\r\n\tthis.step();\r\n}\r\n\r\nPayload.extend(Payload.World, Payload.EventDispatcher);\r\n\r\nPayload.World.defaults = {\r\n\tplanet: {\r\n\t\tcount: {\r\n\t\t\tminimum:\t\t3,\r\n\t\t\tmaximum:\t\t9\r\n\t\t},\r\n\t\tradius: {\r\n\t\t\tminimum:\t\t50,\r\n\t\t\tmaximum:\t\t1024\r\n\t\t},\r\n\t\tfriction:\t\t\t0.9,\r\n\t\trestitution:\t\t0.0\r\n\t},\r\n\tship: {\r\n\t\tradius:\t\t\t\t20,\r\n\t\tlaunchFullPower:\t5000,\r\n\t\t\r\n\t\tdensity:\t\t\t1,\r\n\t\tfriction:\t\t\t0.9,\r\n\t\trestitution:\t\t0.15,\r\n\t\tangularDamping:\t\t0.3\r\n\t}\r\n};\r\n\r\nPayload.World.prototype.initPhysics = function()\r\n{\r\n\tvar self = this;\r\n\t\t\r\n\tthis.b2World\t= new Box2D.b2World(new Box2D.b2Vec2(0.0, 0.0));\r\n\t\r\n\tthis.listener = new Box2D.JSContactListener();\r\n\tthis.listener.BeginContact = function(contactPtr) {\r\n\t\t\r\n\t\tvar contact = Box2D.wrapPointer(contactPtr, Box2D.b2Contact)\r\n\t\t\r\n\t\tvar fixtureA = contact.GetFixtureA();\r\n\t\tvar fixtureB = contact.GetFixtureB();\r\n\t\t\r\n\t\tvar bodyA = fixtureA.GetBody();\r\n\t\tvar bodyB = fixtureB.GetBody();\r\n\t\t\r\n\t\tvar entityA = bodyA.entity;\r\n\t\tvar entityB = bodyB.entity;\r\n\t\t\r\n\t\tPayload.assert(entityA != null, \"No entity associated with body, did you forget to call Payload.Entity.initPhysics after initalising body?\");\r\n\t\tPayload.assert(entityB != null, \"No entity associated with body, did you forget to call Payload.Entity.initPhysics after initalising body?\");\r\n\t\t\r\n\t\tif(entityA && entityB)\r\n\t\t{\r\n\t\t\tentityA.onCollision(entityB, fixtureA, fixtureB);\r\n\t\t\tentityB.onCollision(entityA, fixtureB, fixtureA);\r\n\t\t}\r\n\t\t\r\n\t};\r\n\t\r\n\t// Empty implementations for unused methods.\r\n\tthis.listener.EndContact = function() {};\r\n\tthis.listener.PreSolve = function() {};\r\n\tthis.listener.PostSolve = function() {};\r\n\t\r\n\tthis.b2World.SetContinuousPhysics(1);\r\n\tthis.b2World.SetContactListener(this.listener);\r\n}\r\n\r\nPayload.World.prototype.initGraphics = function()\r\n{\r\n\tvar width\t\t\t= window.innerWidth;\r\n\tvar height\t\t\t= window.innerHeight;\r\n\t\r\n\t// Actual graphics\r\n\tthis.scene\t\t\t= new THREE.Scene();\r\n\t\r\n\tthis.camera\t\t\t= new THREE.OrthographicCamera(\r\n\t\twidth / -2,\r\n\t\twidth / 2,\r\n\t\theight / 2,\r\n\t\theight / -2,\r\n\t\t1,\r\n\t\t1000\r\n\t);\r\n\t\r\n\tthis.camera.position.z = -500;\r\n\tthis.camera.rotation.set(-Math.PI, 0, 0);\r\n\t\r\n\tthis.scene.add(this.camera);\r\n\t\r\n\tthis.renderer\t\t= new THREE.WebGLRenderer({\r\n\t\tantialias: true\r\n\t});\r\n\tthis.renderer.setSize(width, height);\r\n\t\r\n\t// Add renderer DOM element\r\n\tdocument.querySelector(\"#scene\").appendChild(this.renderer.domElement);\r\n\t\r\n\t// And mouse interaction\r\n\tthis.interaction = new Payload.Interaction(this.camera, this.renderer.domElement);\r\n}\r\n\r\nPayload.World.prototype.initPlanets = function(options)\r\n{\r\n\tvar numPlanets = options.planet.count.minimum + Math.round(Math.random() * (options.planet.count.maximum - options.planet.count.minimum));\r\n\t\r\n\tfor(var i = 0; i < numPlanets; i++)\r\n\t{\r\n\t\tvar planet = new Payload.Planet(this, {\r\n\t\t\tposition: {\r\n\t\t\t\tx: (-0.5 + Math.random()) * options.planet.radius.maximum * 12,\r\n\t\t\t\ty: (-0.5 + Math.random()) * options.planet.radius.maximum * 12\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tthis.add(planet);\r\n\t}\r\n}\r\n\r\nPayload.World.prototype.initShipForPlayer = function(player, options)\r\n{\r\n\t// A single debug ship\r\n\t// TODO: Move this to a spawn / teleport function on the ship ideally. It'll need to be reused for teleport.\r\n\t// NB: Maximum of 64 attempts to place the ship. Placing a ship inside a planet causes very odd behaviour with Box2D\r\n\t\r\n\tvar position, entities;\r\n\tvar max\t\t\t\t= 64;\r\n\t\r\n\tfor(var attempt = 0; attempt < max; attempt++)\r\n\t{\r\n\t\tvar index\t\t= Math.floor( Math.random() * this.planets.length );\r\n\t\tvar planet\t\t= this.planets[index];\r\n\t\t\r\n\t\tposition\t\t= planet.getPointOnSurface({\r\n\t\t\tadditionalRadius: options.ship.radius\r\n\t\t});\r\n\t\t\r\n\t\tentities\t\t= this.getEntitiesAtPosition(position);\r\n\t\t\r\n\t\tif(entities.length == 0)\r\n\t\t\tbreak;\r\n\t}\r\n\t\r\n\tif(attempt == max)\r\n\t\tthrow new Error(\"Maximum number of attempts to place ship hit\");\r\n\t\r\n\tif(attempt > max * 0.8)\r\n\t\tconsole.warn(\"High number of attempts to find spawn point for ship\");\r\n\t\r\n\tvar ship\t\t= new Payload.Ship(this, \r\n\t\t$.extend({}, options.ship, {\r\n\t\t\tposition: position\r\n\t\t})\r\n\t);\r\n\t\r\n\tthis.add(ship);\r\n\tplayer.ship = ship;\r\n}\r\n\r\nPayload.World.prototype.initShips = function(options)\r\n{\r\n\tvar self = this;\r\n\t\r\n\tthis.game.players.forEach(function(player) {\r\n\t\t\r\n\t\tself.initShipForPlayer(player, options);\r\n\t\t\r\n\t});\r\n}\r\n\r\nPayload.World.prototype.add = function(entity)\r\n{\r\n\tPayload.assert(entity instanceof Payload.Entity, \"Not an Entity\");\r\n\t\r\n\tthis.entities.push(entity);\r\n\tentity.parent = this;\r\n\t\r\n\tif(entity instanceof Payload.Planet)\r\n\t\tthis.planets.push(entity);\r\n\telse if(entity instanceof Payload.Ship)\r\n\t\tthis.ships.push(entity);\r\n\t\r\n\tif(entity.object3d)\r\n\t\tthis.scene.add(entity.object3d);\r\n\t\r\n\tentity.trigger(\"added\");\r\n}\r\n\r\nPayload.World.prototype.remove = function(entity)\r\n{\r\n\tPayload.assert(entity instanceof Payload.Entity, \"Not an Entity\");\r\n\t\r\n\tvar index = this.entities.indexOf(entity);\r\n\t\r\n\tPayload.assert(index != -1, \"Not in entity list\");\r\n\t\r\n\tthis.entities.splice(index, 1);\r\n\tthis.entity.parent = null;\r\n\t\r\n\tif(entity instanceof Payload.Planet)\r\n\t{\r\n\t\tindex = this.planets.indexOf(entity);\r\n\t\t\r\n\t\tPayload.assert(index != -1, \"Not in planet list\");\r\n\t\t\r\n\t\tthis.planets.splice(index, 1);\r\n\t}\r\n\telse if(entity instanceof Payload.Ship)\r\n\t{\r\n\t\tindex = this.planets.indexOf(entity);\r\n\t\t\r\n\t\tPayload.assert(index != -1, \"Not in planet list\");\r\n\t\t\r\n\t\tthis.planets.splice(index, 1);\r\n\t}\r\n\t\r\n\tthis.entity.trigger(\"removed\");\r\n}\r\n\r\nPayload.World.prototype.getEntitiesAtPosition = function(position, limit)\r\n{\r\n\tPayload.assert(\"x\" in position && \"y\" in position);\r\n\tPayload.assert($.isNumeric(position.x) && $.isNumeric(position.y));\r\n\t\r\n\tif(arguments.length < 2)\r\n\t\tlimit = Infinity;\r\n\telse\r\n\t\tPayload.assert($.isNumeric(limit) && limit > 0, \"Invalid limit\");\r\n\t\r\n\tvar entities = [];\r\n\tvar callback = new Box2D.JSQueryCallback();\r\n\r\n\tcallback.ReportFixture = function(fixturePtr) {\r\n\t\t\r\n\t\tvar fixture = Box2D.wrapPointer( fixturePtr, Box2D.b2Fixture );\r\n\t\t\r\n\t\tif ( ! fixture.TestPoint( this.m_point ) )\r\n\t\t\treturn true;\t// Not touching\r\n\t\t\r\n\t\tvar body\t= fixture.GetBody();\r\n\t\tvar entity\t= body.entity;\r\n\t\t\r\n\t\tPayload.assert(entity != null, \"No entity associated with body, did you forget to call Payload.Entity.initPhysics after initalising body?\");\r\n\t\t\r\n\t\tif(entities.indexOf(entity) > -1)\r\n\t\t\treturn true;\t// Already in list\r\n\t\t\r\n\t\tentities.push(entity);\r\n\t\t\r\n\t\tif(entities.length >= limit)\r\n\t\t\treturn false;\r\n\t\t\r\n\t\treturn true;\r\n\t\t\r\n\t};\r\n\t\r\n\tvar x = Payload.Units.g2p(position.x);\r\n\tvar y = Payload.Units.g2p(position.y);\r\n\t\r\n\tcallback.m_fixture = null;\r\n\tcallback.m_point = new Box2D.b2Vec2(x, y);\r\n\t\r\n\tvar aabb = new Box2D.b2AABB();\r\n\tvar d = 0.01;        \r\n\taabb.set_lowerBound(new Box2D.b2Vec2(x - d, y - d));\r\n\taabb.set_upperBound(new Box2D.b2Vec2(x + d, y + d));\r\n\r\n\tthis.b2World.QueryAABB( callback, aabb ); // the AABB is a tiny square around the current mouse position\r\n\t\r\n\treturn entities;\r\n}\r\n\r\nPayload.World.prototype.step = function()\r\n{\r\n\tvar self = this;\r\n\t\r\n\tif(window.stats)\r\n\t\twindow.stats.begin();\r\n\t\r\n\tvar start\t= new Date().getTime();\r\n\tthis.b2World.Step(1 / 30, 10, 10);\r\n\tvar end\t\t= new Date().getTime();\r\n\tvar delta\t= end - start;\r\n\t\r\n\t// Entities\r\n\tfor(var i = 0; i < this.entities.length; i++)\r\n\t\tthis.entities[i].update();\r\n\t\r\n\t// Rendering\r\n\tthis.renderer.render(this.scene, this.camera);\r\n\t\r\n\tif(this.debugDrawEnabled)\r\n\t{\r\n\t\tthis.context.resetTransform();\r\n\t\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n\t\t\r\n\t\tthis.context.translate(this.canvas.width / 2, this.canvas.height / 2);\r\n\t\t\r\n\t\tthis.context.scale(this.camera.zoom, this.camera.zoom);\r\n\t\tthis.context.translate(-this.camera.position.x, -this.camera.position.y);\r\n\t\t\r\n\t\tthis.context.scale(\r\n\t\t\tPayload.Units.PHYSICS_TO_GRAPHICS,\r\n\t\t\tPayload.Units.PHYSICS_TO_GRAPHICS\r\n\t\t);\r\n\t\t\r\n\t\tthis.b2World.DrawDebugData();\r\n\t}\r\n\t\r\n\tif(delta > 5000)\r\n\t\tthrow new Error(\"Physics engine stalled\");\r\n\t\r\n\trequestAnimationFrame(function() {\r\n\t\tself.step();\r\n\t});\r\n\t\r\n\tif(window.stats)\r\n\t\twindow.stats.end();\r\n}\r\n\r\nPayload.World.prototype.enableDebugDraw = function()\r\n{\r\n\tvar e_shapeBit = 0x0001;\r\n\tvar e_jointBit = 0x0002;\r\n\tvar e_aabbBit = 0x0004;\r\n\tvar e_pairBit = 0x0008;\r\n\tvar e_centerOfMassBit = 0x0010;\r\n\tvar debugDraw = this._debugDraw = getCanvasDebugDraw();\r\n\t\r\n\tvar width\t\t\t= window.innerWidth;\r\n\tvar height\t\t\t= window.innerHeight;\r\n\t\r\n\tif(!this.canvas)\r\n\t{\r\n\t\t// Debug canvas\r\n\t\tthis.canvas\t\t\t= document.createElement(\"canvas\");\r\n\t\tthis.canvas.id\t\t= \"debug-draw\";\r\n\t\t\r\n\t\tthis.canvas.width\t= width;\r\n\t\tthis.canvas.height\t= height;\r\n\t\tthis.context \t\t= this.canvas.getContext(\"2d\");\r\n\t\t\r\n\t\tdocument.querySelector(\"#scene\").appendChild(this.canvas);\r\n\t\t\r\n\t\twindow.context = this.context;\r\n\t\r\n\t\tthis.b2World.SetDebugDraw( debugDraw );\r\n\t\tdebugDraw.SetFlags(e_pairBit | e_shapeBit | e_centerOfMassBit);\r\n\t}\r\n\t\r\n\tthis.debugDrawEnabled = true;\r\n}","// requires: events/event-dispatcher.js\r\n\r\n/**\r\n * @module Payload.Assets\r\n * Loads all assetse ready for use before the game starts\r\n */\r\nPayload.Assets = function()\r\n{\r\n\tvar self = this;\r\n\t\r\n\tPayload.EventDispatcher.call(this);\r\n\t\r\n\tthis.collections = [];\r\n\t\r\n\tthis.manager = new THREE.LoadingManager();\r\n\tthis.manager.onStart = function(url, loaded, total) {\r\n\t\tself.onProgress(url, loaded, total);\r\n\t};\r\n\tthis.manager.onProgress = function(url, loaded, total) {\r\n\t\tself.onProgress(url, loaded, total);\r\n\t};\r\n\tthis.manager.onLoad = function() {\r\n\t\tself.onLoad();\r\n\t};\r\n\tthis.manager.onError = function(url) {\r\n\t\tself.onError(url);\r\n\t}\r\n}\r\n\r\nPayload.extend(Payload.Assets, Payload.EventDispatcher);\r\n\r\nPayload.Assets.prototype.load = function()\r\n{\r\n\tvar self = this;\r\n\t\r\n\t$.ajax(\"assets.json\", {\r\n\t\t\r\n\t\tsuccess: function(response, status, xhr) {\r\n\t\t\tself.loadFromJSON(response);\r\n\t\t},\r\n\t\t\r\n\t\terror: function(xhr, status, error) {\r\n\t\t\tthrow new Error(\"Error loading assets file\");\r\n\t\t}\r\n\t\t\r\n\t});\r\n}\r\n\r\nPayload.Assets.prototype.loadFromJSON = function(json)\r\n{\r\n\tPayload.assert(typeof json == \"object\", \"Invalid assets file\");\r\n\t\r\n\t// NB: Get around a quirk of the directory map gulp plugin\r\n\tjson = json[\"\"];\r\n\t\r\n\tfor(var name in json)\r\n\t{\r\n\t\tthis[name] = new Payload.Assets.Collection(json[name]);\r\n\t}\r\n}\r\n\r\nPayload.Assets.prototype.onProgress = function(url, loaded, total)\r\n{\r\n\tthis.trigger({\r\n\t\ttype:\t\t\"progress\",\r\n\t\tamount:\t\tloaded / total,\r\n\t\tpercent:\t(loaded / total) * 100\r\n\t});\r\n}\r\n\r\nPayload.Assets.prototype.onError = function(url, loaded, total)\r\n{\r\n\tthrow new Error(\"Failed to load asset\");\r\n}\r\n\r\nPayload.Assets.prototype.onLoad = function()\r\n{\r\n\tthis.trigger(\"load\");\r\n}","// requires: assets/assets.js\r\n\r\nPayload.Assets.Asset = function(src)\r\n{\r\n\tvar self\t\t= this;\r\n\tvar constructor\t= this.getLoaderFromFilename(src);\r\n\t\r\n\tthis.loader\t\t= new constructor(payload.assets.manager);\r\n\t\t\r\n\tthis.loader.load(\"/assets\" + src, function(resource) {\r\n\t\tself.resource = resource;\r\n\t});\r\n}\r\n\r\nPayload.Assets.Asset.prototype.getLoaderFromFilename = function(filename)\r\n{\r\n\tvar m = /\\.[a-z0-9]+$/i.exec(filename);\r\n\t\r\n\tif(!m || !m[0])\r\n\t\tthrow new Error(\"Don't know how to load asset\");\r\n\t\r\n\tswitch(m[0].toLowerCase())\r\n\t{\r\n\t\tcase \".png\":\r\n\t\tcase \".jpg\":\r\n\t\tcase \".jpeg\":\r\n\t\t\r\n\t\t\treturn THREE.TextureLoader;\r\n\t\t\r\n\t\t\tbreak;\r\n\t}\r\n}","// requires: assets/assets.js\r\n\r\n/**\r\n * @module Payload.Collection\r\n * Loads all assetse ready for use before the game starts\r\n */\r\n\r\nPayload.Assets.Collection = function(json)\r\n{\r\n\tthis.assets = {};\r\n\t\r\n\tfunction isAssetDefinition(obj)\r\n\t{\r\n\t\tvar index = 0;\r\n\t\t\r\n\t\tif(typeof obj == \"string\")\r\n\t\t\treturn true;\r\n\t\t\r\n\t\tfor(var name in obj)\r\n\t\t{\r\n\t\t\tif(typeof obj[name] != \"string\")\r\n\t\t\t\treturn false;\r\n\t\t\t\r\n\t\t\tif(++index > 1)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor(var name in json)\r\n\t{\r\n\t\tvar child = json[name];\r\n\t\t\r\n\t\tif(isAssetDefinition(child))\r\n\t\t\tthis.assets[name] = new Payload.Assets.Asset(child);\r\n\t\telse\r\n\t\t\tthis[name] = new Payload.Assets.Collection(child);\r\n\t}\r\n}\r\n\r\nPayload.Assets.Collection.prototype.random = function()\r\n{\r\n\tvar arr\t\t= Object.values(this.assets);\r\n\tvar index\t= Math.floor( Math.random() * arr.length );\r\n\t\r\n\treturn arr[index];\r\n}","/* requires: \r\ncore.js\r\nevents/event-dispatcher.js\r\n*/\r\n\r\n/**\r\n * @module Payload.Entity\r\n * Base class for entities, which can optionally be audible, visible or phsyical\r\n */\r\nPayload.Entity = function(world, options)\r\n{\r\n\tPayload.assert(world instanceof Payload.World);\r\n\t\r\n\tPayload.EventDispatcher.call(this);\r\n\t\r\n\tthis.world = world;\r\n\t\r\n\tthis.initPhysics(options);\r\n\tthis.initGraphics(options);\r\n\tthis.initAudio(options);\r\n\t\r\n\tthis.setOptions(options);\r\n}\r\n\r\nPayload.extend(Payload.Entity, Payload.EventDispatcher);\r\n\r\nObject.defineProperty(Payload.Entity.prototype, \"isAffectedByGravity\", {\r\n\t\r\n\t\"get\": function()\r\n\t{\r\n\t\tif(!this.b2Body)\r\n\t\t\treturn false;\r\n\t\t\r\n\t\tif(this instanceof Payload.Planet)\r\n\t\t\treturn false;\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n});\r\n\r\nObject.defineProperty(Payload.Entity.prototype, \"position\", {\r\n\t\r\n\t\"get\": function()\r\n\t{\r\n\t\tif(this.b2Body)\r\n\t\t{\r\n\t\t\tvar vec = this.b2Body.GetWorldCenter();\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t\tx: vec.get_x() * Payload.Units.PHYSICS_TO_GRAPHICS,\r\n\t\t\t\ty: vec.get_y() * Payload.Units.PHYSICS_TO_GRAPHICS\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tif(this.object3d)\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\tx: this.object3d.position.x,\r\n\t\t\t\ty: this.object3d.position.y\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tthrow new Error(\"Entity has no body or object to get position from\");\r\n\t},\r\n\t\r\n\t\"set\": function(position)\r\n\t{\r\n\t\tPayload.assert(\"x\" in position && $.isNumeric(position.x));\r\n\t\tPayload.assert(\"y\" in position && $.isNumeric(position.y));\r\n\t\t\r\n\t\tvar x = position.x;\r\n\t\tvar y = position.y;\r\n\t\t\r\n\t\tif(this.b2Body)\r\n\t\t\tthis.b2Body.SetTransform(\r\n\t\t\t\tnew Box2D.b2Vec2(\r\n\t\t\t\t\tx * Payload.Units.GRAPHICS_TO_PHYSICS, \r\n\t\t\t\t\ty * Payload.Units.GRAPHICS_TO_PHYSICS),\r\n\t\t\t\t0\r\n\t\t\t);\r\n\t\t\t\r\n\t\tif(this.object3d)\r\n\t\t\tthis.object3d.position.set(x, y, 0);\r\n\t}\r\n\t\r\n});\r\n\r\nPayload.Entity.prototype.initPhysics = function()\r\n{\r\n\tif(this.b2Body)\r\n\t\tthis.b2Body.entity = this;\r\n}\r\n\r\nPayload.Entity.prototype.initGraphics = function()\r\n{\r\n\t\r\n}\r\n\r\nPayload.Entity.prototype.initAudio = function()\r\n{\r\n\t\r\n}\r\n\r\nPayload.Entity.prototype.setOptions = function(options)\r\n{\r\n\tif(!options)\r\n\t\treturn;\r\n\t\r\n\tif(\"position\" in options)\r\n\t\tthis.position = options.position;\r\n}\r\n\r\nPayload.Entity.prototype.update = function()\r\n{\r\n\tif(this.b2Body && this.object3d)\r\n\t{\r\n\t\tvar position\t= this.b2Body.GetWorldCenter();\r\n\t\tvar angle\t\t= this.b2Body.GetAngle();\r\n\t\t\r\n\t\tvar x\t\t\t= position.get_x() * Payload.Units.PHYSICS_TO_GRAPHICS;\r\n\t\tvar y\t\t\t= position.get_y() * Payload.Units.PHYSICS_TO_GRAPHICS;\r\n\t\t\r\n\t\ttry{\r\n\t\t\tPayload.assert(!isNaN(x));\r\n\t\t\tPayload.assert(!isNaN(y));\r\n\t\t\tPayload.assert(!isNaN(angle));\r\n\t\t}catch(e) {\r\n\t\t\tthis.world.b2World.DestroyBody(this.b2Body);\r\n\t\t\tthis.b2Body = null;\r\n\t\t\tconsole.warn(\"Box2D encountered a NaN value, body for entity destroyed\");\r\n\t\t}\r\n\t\t\r\n\t\tthis.object3d.position.set(x, y, 0);\r\n\t\tthis.object3d.rotation.set(0, 0, angle);\r\n\t}\r\n}\r\n\r\nPayload.Entity.prototype.onCollision = function(entity, localFixture, otherFixture)\r\n{\r\n\tthis.trigger(\"collision\");\r\n}\r\n\r\nPayload.Entity.prototype.remove = function()\r\n{\r\n\tif(this.b2Body)\r\n\t{\r\n\t\tthis.world.b2World.DestroyBody(this.b2Body);\r\n\t\tthis.b2Body = null;\r\n\t}\r\n\t\r\n\tif(this.object3d)\r\n\t{\r\n\t\tthis.world.scene.remove(this.object3d);\r\n\t\tthis.object3d = null;\r\n\t}\r\n\t\r\n\tthis.world.remove(this);\r\n\tthis.world = null;\r\n}\r\n\r\nPayload.Entity.prototype.launch = function(options)\r\n{\r\n\tPayload.assert(options != null);\r\n\t\r\n\tif(\"x\" in options && \"y\" in options)\r\n\t{\r\n\t\t\r\n\t}\r\n\telse if(\"degrees\" in options && \"power\" in options)\r\n\t{\r\n\t\t\r\n\t}\r\n}\r\n\r\nPayload.Entity.prototype.detonate = function(options)\r\n{\r\n\t// Take option for EMP / explosion\r\n}","// requires: entities/entity.js\r\n\r\nPayload.Planet = function(world, options)\r\n{\r\n\tthis._fixtureDestructionQueue = [];\r\n\tthis._fixturesByFaceIndex = [];\r\n\t\r\n\tthis.options = options;\r\n\t\r\n\t// NB: Do this here because initMesh is called before Entity sets it\r\n\tthis.world = world;\r\n\t\r\n\tthis.initMesh(options);\r\n\t\r\n\tPayload.Entity.apply(this, arguments);\r\n}\r\n\r\nPayload.extend(Payload.Planet, Payload.Entity);\r\n\r\nPayload.Planet.spherize = function(img)\r\n{\r\n\tvar size = 512;\r\n\tvar src = document.createElement(\"canvas\");\r\n\t\r\n\tsrc.width = size;\r\n\tsrc.height = size;\r\n\t\r\n\tvar srcctx = src.getContext(\"2d\");\r\n\tsrcctx.drawImage(img, 0, 0);\r\n\t\r\n\tvar dst\t\t= document.createElement(\"canvas\");\r\n\tdst.width = dst.height = size;\r\n\t\r\n\tvar dstctx\t= dst.getContext(\"2d\");\r\n\t\r\n\tdstctx.fillStyle = \"red\";\r\n\tdstctx.fillRect(0, 0, 512, 512);\r\n\t\r\n\tvar srcpixels = srcctx.getImageData(0, 0, size, size).data;\r\n\tvar dstpixels = srcpixels.slice();\r\n\t\r\n\tdstpixels.fill(0);\r\n\t\r\n\tfunction copyPixel(srcx, srcy, dstx, dsty)\r\n\t{\r\n\t\tvar srcpos = (4 * srcy * size) + (4 * srcx);\r\n\t\tvar dstpos = (4 * dsty * size) + (4 * dstx);\r\n\t\t\r\n\t\tdstpixels[dstpos]\t= srcpixels[srcpos];\r\n\t\tdstpixels[dstpos+1]\t= srcpixels[srcpos+1];\r\n\t\tdstpixels[dstpos+2]\t= srcpixels[srcpos+2];\r\n\t\tdstpixels[dstpos+3]\t= srcpixels[srcpos+3];\r\n\t}\r\n\t\r\n\tfor(var y = 0; y < size; y++)\r\n\t{\r\n\t\tvar ny\t= ((2 * y) / size) - 1;\r\n\t\tvar ny2\t= ny * ny;\r\n\t\t\r\n\t\tfor(var x = 0; x < size; x++)\r\n\t\t{\r\n\t\t\tvar nx\t\t= ((2 * x) / size) - 1;\r\n\t\t\tvar nx2\t\t= nx * nx;\r\n\t\t\t\r\n\t\t\tvar r\t\t= Math.sqrt(nx2 + ny2);\r\n\t\t\t\r\n\t\t\tif(r > 1)\r\n\t\t\t\tcontinue;\r\n\t\t\t\r\n\t\t\tvar nr\t\t= Math.sqrt(1 - r * r);\r\n\t\t\tnr\t\t\t= (r + (1.0 - nr)) / 2;\r\n\t\t\t\r\n\t\t\tif(nr > 1)\r\n\t\t\t\tcontinue;\r\n\t\t\t\r\n\t\t\tvar theta\t= Math.atan2(ny, nx);\r\n\t\t\tvar nxn\t\t= nr * Math.cos(theta);\r\n\t\t\tvar nyn\t\t= nr * Math.sin(theta);\r\n\t\t\tvar x2\t\t= parseInt( ((nxn+1) * size) / 2 );\r\n\t\t\tvar y2\t\t= parseInt( ((nyn+1) * size) / 2 );\r\n\t\t\t\r\n\t\t\tcopyPixel(x2, y2, x, y);\r\n\t\t}\r\n\t}\r\n\t\r\n\tvar temp = new ImageData(size, size);\r\n\ttemp.data.set(dstpixels);\r\n\t\r\n\tsrcctx.putImageData(temp, 0, 0);\r\n\t\r\n\treturn src;\r\n}\r\n\r\nPayload.Planet.prototype.initMesh = function(options)\r\n{\r\n\tvar minRadius = this.world.options.planet.radius.minimum;\r\n\tvar maxRadius = this.world.options.planet.radius.maximum;\r\n\t\r\n\tvar radius = this._radius = minRadius + (Math.random() * Math.round(maxRadius - minRadius));\r\n\tvar density = this._density = 0.5 + (Math.random() * 2);\r\n\t\r\n\tvar area = this._area\t\t= Math.PI * Math.pow(radius, 2);\r\n\tvar sides = this._sides\t\t= Math.round( Math.sqrt(radius) * Math.PI );\r\n\tvar cx = 0;\r\n\tvar cy = 0;\r\n\t\r\n\tvar sites = [];\r\n\t\r\n\tfor(var i = 0; i < sides; i++)\r\n\t{\r\n\t\tvar angle = (i / sides) * Math.PI * 2;\r\n\t\r\n\t\tsites.push([\r\n\t\t\tcx + Math.sin(angle) * radius,\r\n\t\t\tcy + Math.cos(angle) * radius\r\n\t\t]);\r\n\t}\r\n\t\r\n\tvar power\t= 2;\t// Higher powers will bias points towards the surface, 2 will give an even distribution\r\n\tvar inner\t= Math.round(Math.sqrt(area)) * density;\r\n\t\r\n\tfor(var i = 0; i < inner; i++)\r\n\t{\r\n\t\tvar a = Math.random() * 2 * Math.PI;\r\n\t\tvar r = radius * Math.pow(Math.random(), 1 / power);\r\n\t\t\r\n\t\tsites.push([\r\n\t\t\tcx + Math.sin(a) * r,\r\n\t\t\tcy + Math.cos(a) * r\r\n\t\t]);\r\n\t}\r\n\t\r\n\tvar delaunator\t= Delaunator.from(sites);\r\n\t\r\n\tthis._vertices\t= sites;\r\n\tthis._indices\t= delaunator.triangles;\r\n}\r\n\r\nPayload.Planet.prototype.initPhysics = function(options)\r\n{\r\n\tvar sites\t\t= this._vertices;\r\n\tvar triangles\t= this._indices;\r\n\t\r\n\tthis._destructionGravityMultiplier = 1;\r\n\tthis.b2CenterOfGravity = new Box2D.b2Vec2();\r\n\t\r\n\tthis.b2BodyDef\t= new Box2D.b2BodyDef();\r\n\t\r\n\tthis.b2Body\t\t= this.world.b2World.CreateBody(this.b2BodyDef);\r\n\t\r\n\tPayload.Entity.prototype.initPhysics.call(this);\r\n\t\r\n\tfunction convertPoint(point, scale)\r\n\t{\r\n\t\tif(!scale)\r\n\t\t\tscale = 1;\r\n\t\t\r\n\t\treturn new Box2D.b2Vec2(\r\n\t\t\tpoint[0] * scale,\r\n\t\t\tpoint[1] * scale\r\n\t\t);\r\n\t}\r\n\t\r\n\tfunction createPolygonShape(vertices) {\r\n\t\tvar shape = new Box2D.b2PolygonShape();\r\n\t\t// var buffer = Box2D.allocate(vertices.length * 8, 'float', Box2D.ALLOC_STACK);\r\n\t\tvar buffer = Box2D._malloc(vertices.length * 8);\r\n\t\tvar offset = 0;\r\n\t\tfor (var i = 0; i < vertices.length; i++) {\r\n\t\t\t// Box2D.setValue(buffer + (offset), vertices[i].get_x(), 'float'); // x\r\n\t\t\tBox2D.HEAPF32[buffer + offset >> 2] = vertices[i].get_x();\r\n\t\t\t// Box2D.setValue(buffer + (offset + 4), vertices[i].get_y(), 'float'); // y\r\n\t\t\tBox2D.HEAPF32[buffer + (offset + 4) >> 2] = vertices[i].get_y();\r\n\t\t\toffset += 8;\r\n\t\t}\r\n\t\tvar ptr_wrapped = Box2D.wrapPointer(buffer, Box2D.b2Vec2);\r\n\t\tshape.Set(ptr_wrapped, vertices.length);\r\n\t\treturn shape;\r\n\t}\r\n\t\r\n\tfor(var i = 0; i < triangles.length; i += 3)\r\n\t{\r\n\t\tvar vertices = [];\r\n\t\t\r\n\t\tvertices.push( convertPoint(sites[triangles[i+2]], Payload.Units.GRAPHICS_TO_PHYSICS) );\r\n\t\tvertices.push( convertPoint(sites[triangles[i+1]], Payload.Units.GRAPHICS_TO_PHYSICS) );\r\n\t\tvertices.push( convertPoint(sites[triangles[i]]  , Payload.Units.GRAPHICS_TO_PHYSICS) );\r\n\t\tvertices.push( convertPoint(sites[triangles[i+2]], Payload.Units.GRAPHICS_TO_PHYSICS) );\r\n\t\t\r\n\t\tvar shape = createPolygonShape(vertices);\r\n\t\t\r\n\t\tvar fixtureDef = new Box2D.b2FixtureDef();\r\n\t\tfixtureDef.set_density(this._density);\r\n\t\tfixtureDef.set_friction(this.world.options.planet.friction);\r\n\t\tfixtureDef.set_restitution(this.world.options.planet.restitution);\r\n\t\tfixtureDef.set_shape(shape);\r\n\t\t\r\n\t\tvar fixture = this.b2Body.CreateFixture(fixtureDef);\r\n\t\tthis._fixturesByFaceIndex[parseInt(i / 3)] = fixture;\r\n\t}\r\n}\r\n\r\nPayload.Planet.prototype.initGraphics = function()\r\n{\r\n\t// Materials first\r\n\tvar materials = {\r\n\t\t\"damage\":\tnull,\r\n\t\t\"surface\":\tnull\r\n\t};\r\n\t\r\n\tfor(var type in materials)\r\n\t{\r\n\t\tvar asset\t= payload.assets.textures.planet[type].random();\r\n\t\tvar canvas\t= Payload.Planet.spherize(asset.resource.image);\r\n\t\t\r\n\t\tmaterials[type] = new THREE.MeshBasicMaterial();\r\n\t\tmaterials[type].map = new THREE.CanvasTexture(canvas);\r\n\t}\r\n\t\r\n\t// Now build a mesh\r\n\tvar v;\r\n\t\r\n\tthis.object3d = new THREE.Object3D();\r\n\t\r\n\tthis.damage = new THREE.Mesh(\r\n\t\tnew THREE.CircleGeometry(this._radius, this._sides),\r\n\t\tmaterials.damage\r\n\t);\r\n\tthis.damage.position.set(0, 0, 10);\r\n\tthis.object3d.add(this.damage);\r\n\t\r\n\tthis.geometry = new THREE.Geometry();\r\n\t\r\n\tfor(var i = 0; i < this._vertices.length; i++)\r\n\t{\r\n\t\tv = this._vertices[i];\r\n\t\tthis.geometry.vertices.push(new THREE.Vector3(v[0], v[1], 0));\r\n\t}\r\n\t\r\n\tfor(var i = 0; i < this._indices.length; i += 3)\r\n\t{\r\n\t\tvar faceIndex\t= parseInt(i / 3);\r\n\t\tvar fixture\t\t= this._fixturesByFaceIndex[faceIndex];\r\n\t\t\r\n\t\tvar face = new THREE.Face3(\r\n\t\t\tthis._indices[i],\r\n\t\t\tthis._indices[i + 1],\r\n\t\t\tthis._indices[i + 2]\r\n\t\t);\r\n\t\t\r\n\t\tface.fixture = fixture;\r\n\t\tfixture.face = face;\r\n\t\t\r\n\t\tthis.geometry.faces.push(face);\r\n\t\t\r\n\t\tvar faceUVs = [];\r\n\t\tvar radius2\t= this._radius * 2;\r\n\t\t\r\n\t\tfor(var j = 0; j < 3; j++)\r\n\t\t{\r\n\t\t\tvar vertex = this._vertices[ this._indices[i + j] ];\r\n\t\t\tvar vector = new THREE.Vector2(\r\n\t\t\t\t0.5 + (vertex[0] / radius2),\r\n\t\t\t\t0.5 + (vertex[1] / radius2)\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\tfaceUVs.push(vector);\r\n\t\t}\r\n\t\t\r\n\t\tthis.geometry.faceVertexUvs[0].push(faceUVs);\r\n\t}\r\n\t\r\n\tthis.surface = new THREE.Mesh(this.geometry, materials.surface);\r\n\tthis.object3d.add(this.surface);\r\n\t\r\n\tdelete this._fixturesByFaceIndex;\r\n}\r\n\r\nPayload.Planet.prototype.getPointOnSurface = function(options)\r\n{\r\n\tvar radius = this._radius;\r\n\tvar position = this.position;\r\n\t\r\n\tif(!options)\r\n\t\toptions = {};\r\n\t\r\n\tif(!options.angle)\r\n\t\toptions.angle = Math.random() * 2 * Math.PI;\r\n\t\r\n\tif(options.additionalRadius)\r\n\t\tradius += options.additionalRadius;\r\n\t\r\n\treturn {\r\n\t\tx: position.x + (Math.cos(options.angle) * radius),\r\n\t\ty: position.y + (-Math.sin(options.angle) * radius)\r\n\t};\r\n}\r\n\r\nPayload.Planet.prototype.applyGravity = function(entity)\r\n{\r\n\tPayload.assert(entity.isAffectedByGravity);\r\n\t\r\n\tvar radius\t= this._radius;\r\n\tvar gravity\t= radius * this._destructionGravityMultiplier;\r\n\t\r\n\tvar center\t= this.b2Body.GetWorldCenter();\r\n\tvar target\t= entity.b2Body.GetWorldCenter();\r\n\t\r\n\tvar delta\t= new Box2D.b2Vec2(0, 0);\r\n\tdelta.op_add(target);\r\n\tdelta.op_sub(center);\r\n\tdelta.op_sub(this.b2CenterOfGravity);\r\n\t\r\n\tvar distance = delta.Length();\r\n\t\r\n\t// Skip distance check distance < 3 * radius\r\n\t\r\n\tdelta.Set(\r\n\t\t-delta.get_x(),\r\n\t\t-delta.get_y()\r\n\t);\r\n\t\r\n\tvar sum\t\t= Math.abs(delta.get_x()) + Math.abs(delta.get_y());\r\n\tdelta.op_mul((1 / sum) * gravity / distance);\r\n\t\r\n\tentity.b2Body.ApplyForceToCenter(delta);\r\n}\r\n\r\nPayload.Planet.prototype.applyFixtureDamage = function(fixture)\r\n{\r\n\tif(this._fixtureDestructionQueue.indexOf(fixture) > -1)\r\n\t\treturn;\r\n\t\r\n\tthis._fixtureDestructionQueue.push(fixture);\r\n}\r\n\r\nPayload.Planet.prototype.handleMeshDestruction = function()\r\n{\r\n\tvar self = this;\r\n\tvar updateMesh = this._fixtureDestructionQueue.length > 0;\r\n\t\r\n\twhile(this._fixtureDestructionQueue.length)\r\n\t{\r\n\t\tvar fixture = this._fixtureDestructionQueue.pop();\r\n\t\t\r\n\t\tvar index = this.geometry.faces.indexOf(fixture.face);\r\n\t\tthis.geometry.faces.splice(index, 1);\r\n\t\tthis.geometry.faceVertexUvs[0].splice(index, 1);\r\n\t\t\r\n\t\tthis.b2Body.DestroyFixture(fixture);\r\n\t}\r\n\t\r\n\tif(updateMesh)\r\n\t{\r\n\t\t// TODO: Calculate new mass based on remaining surface area\r\n\t\t// TODO: Calculate new center of gravity based on triangles\r\n\t\t\r\n\t\tif(this.geometry.faces.length)\r\n\t\t{\r\n\t\t\tthis.geometry.elementsNeedUpdate = true;\r\n\t\t\tthis.geometry.uvsNeedUpdate = true;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.remove();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t// Calculate new center of mass and area\r\n\t\tvar vertexIDsByKey = {};\r\n\t\tvar areaDestroyed = 0;\r\n\t\tvar initialArea = Math.PI * (this._radius * this._radius);\r\n\t\t\r\n\t\tfunction area(ia, ib, ic)\r\n\t\t{\r\n\t\t\tvar va = self._vertices[ia];\r\n\t\t\tvar vb = self._vertices[ib];\r\n\t\t\tvar vc = self._vertices[ic];\r\n\t\t\t\r\n\t\t\tvar x1 = va[0];\r\n\t\t\tvar x2 = vb[0];\r\n\t\t\tvar x3 = vc[0];\r\n\t\t\t\r\n\t\t\tvar y1 = va[1];\r\n\t\t\tvar y2 = vb[1];\r\n\t\t\tvar y3 = vc[1];\r\n\t\t\t\r\n\t\t\treturn Math.abs(0.5*(x1*(y2-y3)+x2*(y3-y1)+x3*(y1-y2)));\r\n\t\t}\r\n\t\t\r\n\t\tfor(var i = 0; i < this.geometry.faces.length; i++)\r\n\t\t{\r\n\t\t\tvar face = this.geometry.faces[i];\r\n\t\t\t\r\n\t\t\tvertexIDsByKey[face.a] = true;\r\n\t\t\tvertexIDsByKey[face.b] = true;\r\n\t\t\tvertexIDsByKey[face.c] = true;\r\n\t\t\t\r\n\t\t\tareaDestroyed += area(face.a, face.b, face.c);\r\n\t\t}\r\n\t\t\r\n\t\tvar usedVertexIDs = Object.keys(vertexIDsByKey);\r\n\t\tvar centerOfMass = {x: 0, y: 0};\r\n\t\t\r\n\t\tusedVertexIDs.forEach(function(index) {\r\n\t\t\t\r\n\t\t\tvar vertex = self._vertices[index];\r\n\t\t\t\r\n\t\t\tcenterOfMass.x += vertex[0];\r\n\t\t\tcenterOfMass.y += vertex[1];\r\n\t\t\t\r\n\t\t});\r\n\t\t\r\n\t\tcenterOfMass.x /= usedVertexIDs.length;\r\n\t\tcenterOfMass.y /= usedVertexIDs.length;\r\n\t\t\r\n\t\tthis.b2CenterOfGravity = new Box2D.b2Vec2(\r\n\t\t\tPayload.Units.g2p(centerOfMass.x),\r\n\t\t\tPayload.Units.g2p(centerOfMass.y)\r\n\t\t);\r\n\t\t\r\n\t\tif(areaDestroyed > 0)\r\n\t\t\tthis._destructionGravityMultiplier = areaDestroyed / initialArea;\r\n\t}\r\n}\r\n\r\nPayload.Planet.prototype.handleGravity = function()\r\n{\r\n\tfor(var i = 0; i < this.world.entities.length; i++)\r\n\t{\r\n\t\tvar entity = this.world.entities[i];\r\n\t\t\r\n\t\tif(!entity.isAffectedByGravity)\r\n\t\t\tcontinue;\r\n\t\t\t\r\n\t\tthis.applyGravity(entity);\r\n\t}\r\n}\r\n\r\nPayload.Planet.prototype.update = function()\r\n{\r\n\tthis.handleMeshDestruction();\r\n\tthis.handleGravity();\r\n\t\r\n\t// Payload.Entity.prototype.update.apply(this, arguments);\r\n}","// requires: entities/entity.js\r\n\r\nPayload.Ship = function(world, options)\r\n{\r\n\tPayload.Entity.apply(this, arguments);\r\n}\r\n\r\nPayload.extend(Payload.Ship, Payload.Entity);\r\n\r\nPayload.Ship.prototype.initPhysics = function(options)\r\n{\r\n\tthis.b2BodyDef = new Box2D.b2BodyDef();\r\n\tthis.b2BodyDef.set_type( Box2D.b2_dynamicBody );\r\n\t\r\n\tthis.b2Body\t= this.world.b2World.CreateBody(this.b2BodyDef);\r\n\tthis.b2Body.SetAngularDamping(options.angularDamping);\r\n\t\r\n\tPayload.Entity.prototype.initPhysics.call(this);\r\n\t\r\n\tvar radius\t= Payload.Units.g2p(options.radius);\r\n\tvar shape\t= new Box2D.b2PolygonShape();\r\n\t\r\n\tshape.SetAsBox(1, 1);\r\n\t\r\n\tvar fixtureDef = new Box2D.b2FixtureDef();\r\n\tfixtureDef.set_density(options.density);\r\n\tfixtureDef.set_friction(options.friction);\r\n\tfixtureDef.set_restitution(options.restitution);\r\n\tfixtureDef.set_shape(shape);\r\n\t\r\n\tthis.b2Body.CreateFixture(fixtureDef);\r\n}\r\n\r\nPayload.Ship.prototype.initGraphics = function(options)\r\n{\r\n\tvar radius = options.radius;\r\n\t\r\n\tvar geometry = new THREE.BoxGeometry(radius * 2, radius * 2, radius * 2);\r\n\tvar material = new THREE.MeshBasicMaterial({color: 0xff0000});\r\n\t\r\n\tthis.object3d = new THREE.Mesh(geometry, material);\r\n}","// requires: core.js\r\n\t\t\r\n/**\r\n * Base class used for events (for non-HTMLElement objects)\r\n * @module Payload.Event\r\n * @memberof Payload\r\n * @param {string|object} options The event type as a string, or an object of options to be mapped to this event\r\n */\r\nPayload.Event = function(options)\r\n{\r\n\tif(typeof options == \"string\")\r\n\t\tthis.type = options;\r\n\t\r\n\tthis.bubbles\t\t= true;\r\n\tthis.cancelable\t\t= true;\r\n\tthis.phase\t\t\t= Payload.Event.PHASE_CAPTURE;\r\n\tthis.target\t\t\t= null;\r\n\t\r\n\tthis._cancelled = false;\r\n\t\r\n\tif(typeof options == \"object\")\r\n\t\tfor(var name in options)\r\n\t\t\tthis[name] = options[name];\r\n}\r\n\r\nPayload.Event.CAPTURING_PHASE\t\t= 0;\r\nPayload.Event.AT_TARGET\t\t\t\t= 1;\r\nPayload.Event.BUBBLING_PHASE\t\t= 2;\r\n\r\n/**\r\n * Prevents any further propagation of this event\r\n * @method\r\n * @memberof Payload.Event\r\n */\r\nPayload.Event.prototype.stopPropagation = function()\r\n{\r\n\tthis._cancelled = true;\r\n}\r\n","// requires: core.js\r\n\t\r\nPayload.WeaponSelect = function($element)\r\n{\r\n\tthis.$element = $element;\r\n\tthis.$element.html(\"\");\r\n\t\r\n\tfor(var name in Payload.Weapon)\r\n\t{\r\n\t\tvar $option\t= $(\"<option></option>\");\r\n\t\tvar cost;\r\n\t\t\r\n\t\tif(Payload.Weapon[name].COST !== undefined)\r\n\t\t\tcost\t= Payload.Weapon[name].COST;\r\n\t\telse\r\n\t\t{\r\n\t\t\tconsole.warn(\"Payload.Weapon.\" + name + \" has no COST\");\r\n\t\t\tcost\t= 0;\r\n\t\t}\r\n\t\t\r\n\t\tvar caption\t= name.replace(/([A-Z])/g, \" $1\").trim(\" \") + \" (\" + cost + \")\";\r\n\t\t\r\n\t\t$option.attr(\"value\", name);\r\n\t\t$option.text(caption);\r\n\t\t\r\n\t\t$($element).append($option);\r\n\t}\r\n}","// requires: entities/entity.js\r\n\r\nPayload.Weapon = function(world)\r\n{\r\n\tPayload.Entity.apply(this, arguments);\r\n}\r\n\r\nPayload.extend(Payload.Weapon, Payload.Entity);\r\n\r\nPayload.Weapon.prototype.fire = function()\r\n{\r\n\t\r\n}\r\n","// requires: weapons/weapon.js\r\n\r\nPayload.Bomb = function(world)\r\n{\r\n\tPayload.Weapon.apply(this, arguments);\r\n\t\r\n\tthis.damage = 1;\r\n\tthis.radius = 10;\r\n}\r\n\r\nPayload.extend(Payload.Bomb, Payload.Weapon);\r\n\r\nPayload.Bomb.prototype.fire = function(options)\r\n{\r\n\tvar self = this;\r\n\t\r\n\t// Create a new projectile at the specified position\r\n\tvar projectile = new Payload.Projectile(options);\r\n\t\r\n\t// Collision listener for this projectile\r\n\tprojectile.on(\"collision\", function(event) {\r\n\t\t\r\n\t\t// Bang!\r\n\t\tprojectile.detonate({\r\n\t\t\tdamage: 5,\r\n\t\t\tradius: 50\r\n\t\t});\r\n\t\t\r\n\t\t// Let the game know this weapon is finished so the turn can end\r\n\t\tself.trigger(\"complete\");\r\n\t\t\r\n\t});\r\n\t\r\n\t// Launch the projectile and the specified angle and power\r\n\tprojectile.launch(options);\r\n}\r\n","// requires: weapons/bomb.js\r\n\r\nPayload.Weapon.LargeBomb = function(world)\r\n{\r\n\tPayload.Bomb.apply(this, arguments);\r\n\t\r\n\tthis.damage = 40;\r\n\tthis.radius = 120;\r\n}\r\n\r\nPayload.extend(Payload.Weapon.LargeBomb, Payload.Bomb);\r\n\r\nPayload.Weapon.LargeBomb.COST\t= 30;","// requires: weapons/bomb.js\r\n\r\nPayload.Weapon.MediumBomb = function(world)\r\n{\r\n\tPayload.Bomb.apply(this, arguments);\r\n\t\r\n\tthis.damage = 15;\r\n\tthis.radius = 80;\r\n}\r\n\r\nPayload.extend(Payload.Weapon.MediumBomb, Payload.Bomb);\r\n\r\nPayload.Weapon.MediumBomb.COST\t= 10;","// requires: weapons/bomb.js\r\n\r\nPayload.Weapon.MegaBomb = function(world)\r\n{\r\n\tPayload.Bomb.apply(this, arguments);\r\n\t\r\n\tthis.damage = 60;\r\n\tthis.radius = 160;\r\n}\r\n\r\nPayload.extend(Payload.Weapon.MegaBomb, Payload.Bomb);\r\n\r\nPayload.Weapon.MegaBomb.COST\t= 60;","// requires: entities/entity.js\r\n\r\nPayload.Projectile = function(world, options)\r\n{\r\n\tPayload.Entity.apply(this, arguments);\r\n}\r\n\r\nPayload.extend(Payload.Projectile, Payload.Entity);\r\n","// requires: weapons/bomb.js\r\n\r\nPayload.Weapon.SmallBomb = function(world)\r\n{\r\n\tPayload.Bomb.apply(this, arguments);\r\n\t\r\n\tthis.damage = 10;\r\n\tthis.radius = 50;\r\n}\r\n\r\nPayload.extend(Payload.Weapon.SmallBomb, Payload.Bomb);\r\n\r\nPayload.Weapon.SmallBomb.COST\t= 0;"]}